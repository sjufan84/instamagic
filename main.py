""" Instamagic Home Page """
import asyncio
import logging
import streamlit as st
from typing import List
from streamlit_extras.stylable_container import stylable_container
from streamlit_extras.switch_page_button import switch_page

logging.basicConfig(level=logging.DEBUG)
logger = logging.getLogger(__name__)

# Purpose options list
post_purposes = [
    "Restaurant Review",
    "Book Review",
    "Family Update",
    "Travel Experience",
    "Recipe Share",
    "Health & Fitness Progress",
    "Personal Achievement",
    "Work or Career News",
    "Educational Content",
    "Event Announcement",
    "Hobby or Craft Showcase",
    "Pet Update",
    "Music or Playlist Recommendation",
    "Movie or TV Show Review",
    "Tech Gadget Review",
    "Fashion or Beauty Tips",
    "Sports Update",
    "DIY Project",
    "Gaming Experience",
    "Charity or Cause Awareness",
    "Political Opinion",
    "Business Promotion",
    "Meme or Funny Content",
    "Question or Poll",
    "Life Advice or Tips",
    "Nature and Outdoor Adventures",
    "Art and Photography",
    "Science and Discovery",
    "Cultural Experience",
    "Daily Thoughts or Reflections",
    "Other"
]

# Import Google Font in Streamlit CSS
st.markdown(
    """
    <style>
        @import url('https://fonts.googleapis.com/css?family=Anton');
        @import url('https://fonts.googleapis.com/css2?family=Arapey&display=swap');
    </style>
    """,
    unsafe_allow_html=True
)

def header():
    with stylable_container(
        key="header-main",
        css_styles="""
            h1 {
                color: #000000;
                font-size: 4em;
                text-align: center;
                font-family: 'Anton', sans-serif;
            }
            p {
                font-size: 1.1em;
                text-align: start;
                font-family: 'Arapey', serif;
            }
        """,
    ):
        # Create a centered header using HTML with bold font
        st.markdown(
            """<h1><b>INSTAMAGIC</b></h1>""", unsafe_allow_html=True
        )
        # Create a centered subheader using HTML with bold font
        st.markdown(
            """<p style='text-align:center; font-family:"Arapey";'>
            Create magical social media posts generated by AI, tailored to you.</p>""", unsafe_allow_html=True
        )
        with stylable_container(
            key="post-main",
            css_styles="""

            """,
        ):
            st.markdown(
                """**How it works:** INSTAMAGIC uses cutting-edge AI to generate bespoke social media
                posts that are tailored to meet your specific needs.  Whether you are a foodie, a bookworm, a
                fitness enthusiast, a world traveler, or a pet lover, we have you covered!  Simply select the
                purpose of your post, specify the tone, persona, verbosity and platform, and let the magic
                begin!  We can even generate an image to go with your post, either based
                entirely on your prompt
                and parameters, or taking into account an existing image you provide.  Have fun and let your
                creativity run wild!\n\n If you need some inspiration
                or more guidance on how to use INSTAMAGIC,
                click below to view some examples."""
            )
            examples_button = st.button("View Examples")
            if examples_button:
                switch_page("Examples")
                st.rerun()

def purpose_select(purpose_options: List[str]):
    """ Purpose Selection """
    purpose = st.selectbox("What is the purpose of your post?  (Select 'Other' if\
    you do not find the appropriate option')", purpose_options)
    return purpose

def other_purpose():
    """ Other Purpose option if use selects "Other" """
    other_purpose = st.text_input("Please specify the purpose of your post")
    return other_purpose

async def main():
    """ Main function """
    header()
    purpose = purpose_select(post_purposes)
    if purpose == "Other":
        purpose = other_purpose()


if __name__ == "__main__":
    asyncio.run(main())
